Still to do:
 ☐ Implement semester clearing
 ☐ Hook up to existing site (backbone?)
 ☐ Success dialogues
 ☐ Form validation
 ☐ Polish interface CSS
   Users:
   ☐ User password reset
   ☐ Made admin user delete-proof
   ☐ If user is deleted from system they should also be deleted from schedule


To explore:
☐ Go live in session store?
☐ Playlists with the same date do not get displayed correctly - maybe store beginning and end indeces as data attributes?
☐ If you are storing the user in sessions can you send them to the right page after schedule?
  

Nice to have/To add eventually:
☐ Cropping images
☐ Facebook integration
☐ Deleting images
☐ Manage eboard positions
☐ Switch to sendgrid
☐ Use forms in AJAX so enter submits
☐ Autocomplete


Before Production:
 ☐ PROTECT FROM HACKERS 
 ☐ Read up on production software tips
 ☐ Forever.js
 ☐ Clean up bits of code, files, console.logs
 ☐ Add authentication routes in

Add users protocol:
  1. Admin adds a user from the admin interface
  2. The user gets created, and an email to the user is generated
  3. The user follows the link where they are prompted to enter their password
 

res.res ( , locals, ) to send info back?
res.end to make sure library does not get resubmitted?
